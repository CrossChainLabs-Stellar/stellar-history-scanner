"use strict";module.exports = validate20;module.exports.default = validate20;const schema22 = {"$id":"network.json","$schema":"http://json-schema.org/draft-07/schema#","properties":{"time":{"format":"date-time","type":"string","description":"Network state at time x"},"latestLedger":{"type":"string","description":"The latest ledger that was closed in the network at time x"},"statistics":{"$ref":"#/definitions/NetworkStatistics"},"id":{"type":"string","description":"Network ID","default":"Public Global Stellar Network ; September 2015"},"name":{"type":"string","description":"Network name","default":"Public network"},"nodes":{"items":{"$ref":"node.json"},"type":"array"},"organizations":{"items":{"$ref":"organization.json"},"type":"array"},"transitiveQuorumSet":{"items":{"type":"string"},"type":"array","description":"array of nodes in the transitive quorumset of the trust graph"},"scc":{"items":{"type":"array","items":{"type":"string"}},"type":"array","description":"Strongly connected components in the trust graph"}},"type":"object","required":["nodes"],"definitions":{"NetworkStatistics":{"properties":{"hasQuorumIntersection":{"type":"boolean","description":"Does the network have quorum intersection"},"hasTransitiveQuorumSet":{"default":false,"type":"boolean","description":"Does the network have a transitive quorum set"},"minBlockingSetFilteredSize":{"default":0,"type":"number","description":"The size of the smallest network blocking set with failing nodes filtered out"},"minBlockingSetOrgsFilteredSize":{"type":"number","description":"The size of the smallest network blocking set grouped by organizations, with failing organizations filtered out"},"minBlockingSetOrgsSize":{"type":"number","description":"The size of the smallest network blocking set grouped by organizations"},"minBlockingSetSize":{"type":"number","description":"The size of the smallest network blocking set"},"minSplittingSetOrgsSize":{"type":"number","description":"The size of the smallest network splitting set, grouped by organizations"},"minSplittingSetCountrySize":{"type":"number","description":"The size of the smallest network splitting set, grouped by countries"},"minSplittingSetISPSize":{"type":"number","description":"The size of the smallest network splitting set, grouped by ISP's"},"minSplittingSetSize":{"type":"number","description":"The size of the smallest network splitting set"},"nrOfActiveFullValidators":{"default":0,"type":"number","description":"Number of active full validators"},"nrOfActiveOrganizations":{"default":0,"type":"number","description":"Number of active organizations"},"nrOfActiveValidators":{"default":0,"type":"number","description":"Number of active validators"},"nrOfActiveWatchers":{"default":0,"type":"number","description":"Number of active watcher nodes"},"time":{"format":"date-time","type":"string","description":"Time of the statistics"},"topTierOrgsSize":{"type":"number","description":"Number of organizations in the top tier"},"topTierSize":{"type":"number","description":"Number of nodes in the top tier"},"transitiveQuorumSetSize":{"default":0,"type":"number","description":"Number of nodes in the transitive quorum set"}},"type":"object"}}};const schema23 = {"properties":{"hasQuorumIntersection":{"type":"boolean","description":"Does the network have quorum intersection"},"hasTransitiveQuorumSet":{"default":false,"type":"boolean","description":"Does the network have a transitive quorum set"},"minBlockingSetFilteredSize":{"default":0,"type":"number","description":"The size of the smallest network blocking set with failing nodes filtered out"},"minBlockingSetOrgsFilteredSize":{"type":"number","description":"The size of the smallest network blocking set grouped by organizations, with failing organizations filtered out"},"minBlockingSetOrgsSize":{"type":"number","description":"The size of the smallest network blocking set grouped by organizations"},"minBlockingSetSize":{"type":"number","description":"The size of the smallest network blocking set"},"minSplittingSetOrgsSize":{"type":"number","description":"The size of the smallest network splitting set, grouped by organizations"},"minSplittingSetCountrySize":{"type":"number","description":"The size of the smallest network splitting set, grouped by countries"},"minSplittingSetISPSize":{"type":"number","description":"The size of the smallest network splitting set, grouped by ISP's"},"minSplittingSetSize":{"type":"number","description":"The size of the smallest network splitting set"},"nrOfActiveFullValidators":{"default":0,"type":"number","description":"Number of active full validators"},"nrOfActiveOrganizations":{"default":0,"type":"number","description":"Number of active organizations"},"nrOfActiveValidators":{"default":0,"type":"number","description":"Number of active validators"},"nrOfActiveWatchers":{"default":0,"type":"number","description":"Number of active watcher nodes"},"time":{"format":"date-time","type":"string","description":"Time of the statistics"},"topTierOrgsSize":{"type":"number","description":"Number of organizations in the top tier"},"topTierSize":{"type":"number","description":"Number of nodes in the top tier"},"transitiveQuorumSetSize":{"default":0,"type":"number","description":"Number of nodes in the transitive quorum set"}},"type":"object"};const schema28 = {"$id":"organization.json","$schema":"http://json-schema.org/draft-07/schema#","properties":{"dateDiscovered":{"format":"date-time","type":"string"},"dba":{"type":"string"},"description":{"type":"string"},"github":{"type":"string"},"has24HourStats":{"default":false,"type":"boolean"},"has30DayStats":{"default":false,"type":"boolean"},"horizonUrl":{"type":"string"},"id":{"type":"string"},"hasReliableUptime":{"type":"boolean"},"keybase":{"type":"string"},"logo":{"type":"string"},"name":{"type":"string"},"officialEmail":{"type":"string"},"phoneNumber":{"type":"string"},"physicalAddress":{"type":"string"},"subQuorum24HoursAvailability":{"default":0,"type":"number"},"subQuorum30DaysAvailability":{"default":0,"type":"number"},"subQuorumAvailable":{"default":false,"type":"boolean"},"twitter":{"type":"string"},"url":{"type":"string"},"validators":{"default":[],"items":{"type":"string"},"type":"array"}},"type":"object","required":["id","name","validators"]};const formats0 = require("ajv-formats/dist/formats").fullFormats["date-time"];const schema24 = {"$id":"node.json","$schema":"http://json-schema.org/draft-07/schema#","properties":{"active":{"default":false,"type":"boolean","description":"Node accepts connections from other nodes"},"activeInScp":{"default":false,"type":"boolean","description":"Node is active in SCP"},"alias":{"type":"string"},"dateDiscovered":{"format":"date-time","type":"string"},"dateUpdated":{"format":"date-time","type":"string"},"displayName":{"type":"string"},"geoData":{"$ref":"#/definitions/NodeGeoData"},"historyUrl":{"type":"string"},"homeDomain":{"type":"string"},"host":{"type":"string"},"index":{"default":0,"type":"number","description":"Used to compare nodes. The more trustworthy, the higher the index."},"lag":{"default":0,"type":"number","description":"Node externalize lag in milliseconds"},"ip":{"default":"127.0.0.1","type":"string"},"isFullValidator":{"default":false,"type":"boolean"},"isValidating":{"default":false,"type":"boolean","description":"Participating in SCP and externalizing new values"},"isValidator":{"type":"boolean"},"isp":{"type":"string"},"key":{"type":"string","description":"ip:port pair","default":"127.0.0.1:11625"},"ledgerVersion":{"type":"number"},"name":{"type":"string"},"networkId":{"type":"string"},"organizationId":{"type":"string"},"overLoaded":{"default":false,"type":"boolean","description":"When node disconnects with err_load"},"overlayMinVersion":{"type":"number"},"overlayVersion":{"type":"number"},"port":{"type":"number"},"publicKey":{"type":"string"},"quorumSet":{"$ref":"#/definitions/QuorumSet"},"quorumSetHashKey":{"type":"string"},"statistics":{"$ref":"#/definitions/NodeStatistics"},"versionStr":{"type":"string"},"historyArchiveHasError":{"type":"boolean"}},"type":"object","required":["publicKey","quorumSet"],"definitions":{"NodeGeoData":{"properties":{"countryCode":{"type":"string"},"countryName":{"type":"string"},"latitude":{"type":"number"},"longitude":{"type":"number"}},"type":"object"},"NodeStatistics":{"properties":{"active24HoursPercentage":{"default":0,"type":"number"},"active30DaysPercentage":{"default":0,"type":"number"},"has24HourStats":{"default":false,"type":"boolean"},"has30DayStats":{"default":false,"type":"boolean"},"overLoaded24HoursPercentage":{"default":0,"type":"number"},"overLoaded30DaysPercentage":{"default":0,"type":"number"},"validating24HoursPercentage":{"default":0,"type":"number"},"validating30DaysPercentage":{"default":0,"type":"number"}},"type":"object"},"QuorumSet":{"properties":{"innerQuorumSets":{"items":{"$ref":"#/definitions/QuorumSet"},"type":"array"},"threshold":{"type":"number"},"validators":{"items":{"type":"string"},"type":"array"}},"type":"object","required":["innerQuorumSets","threshold","validators"]}}};const schema25 = {"properties":{"countryCode":{"type":"string"},"countryName":{"type":"string"},"latitude":{"type":"number"},"longitude":{"type":"number"}},"type":"object"};const schema27 = {"properties":{"active24HoursPercentage":{"default":0,"type":"number"},"active30DaysPercentage":{"default":0,"type":"number"},"has24HourStats":{"default":false,"type":"boolean"},"has30DayStats":{"default":false,"type":"boolean"},"overLoaded24HoursPercentage":{"default":0,"type":"number"},"overLoaded30DaysPercentage":{"default":0,"type":"number"},"validating24HoursPercentage":{"default":0,"type":"number"},"validating30DaysPercentage":{"default":0,"type":"number"}},"type":"object"};const schema26 = {"properties":{"innerQuorumSets":{"items":{"$ref":"#/definitions/QuorumSet"},"type":"array"},"threshold":{"type":"number"},"validators":{"items":{"type":"string"},"type":"array"}},"type":"object","required":["innerQuorumSets","threshold","validators"]};const wrapper0 = {validate: validate22};function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.innerQuorumSets === undefined) && (missing0 = "innerQuorumSets")) || ((data.threshold === undefined) && (missing0 = "threshold"))) || ((data.validators === undefined) && (missing0 = "validators"))){validate22.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.innerQuorumSets !== undefined){let data0 = data.innerQuorumSets;const _errs1 = errors;if(errors === _errs1){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){const _errs3 = errors;if(!(wrapper0.validate(data0[i0], {instancePath:instancePath+"/innerQuorumSets/" + i0,parentData:data0,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? wrapper0.validate.errors : vErrors.concat(wrapper0.validate.errors);errors = vErrors.length;}var valid1 = _errs3 === errors;if(!valid1){break;}}}else {validate22.errors = [{instancePath:instancePath+"/innerQuorumSets",schemaPath:"#/properties/innerQuorumSets/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.threshold !== undefined){let data2 = data.threshold;const _errs4 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate22.errors = [{instancePath:instancePath+"/threshold",schemaPath:"#/properties/threshold/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.validators !== undefined){let data3 = data.validators;const _errs6 = errors;if(errors === _errs6){if(Array.isArray(data3)){var valid2 = true;const len1 = data3.length;for(let i1=0; i1<len1; i1++){const _errs8 = errors;if(typeof data3[i1] !== "string"){validate22.errors = [{instancePath:instancePath+"/validators/" + i1,schemaPath:"#/properties/validators/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;if(!valid2){break;}}}else {validate22.errors = [{instancePath:instancePath+"/validators",schemaPath:"#/properties/validators/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}}}}}else {validate22.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate22.errors = vErrors;return errors === 0;}function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="node.json" */;let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.publicKey === undefined) && (missing0 = "publicKey")) || ((data.quorumSet === undefined) && (missing0 = "quorumSet"))){validate21.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.active !== undefined){const _errs1 = errors;if(typeof data.active !== "boolean"){validate21.errors = [{instancePath:instancePath+"/active",schemaPath:"#/properties/active/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.activeInScp !== undefined){const _errs3 = errors;if(typeof data.activeInScp !== "boolean"){validate21.errors = [{instancePath:instancePath+"/activeInScp",schemaPath:"#/properties/activeInScp/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.alias !== undefined){const _errs5 = errors;if(typeof data.alias !== "string"){validate21.errors = [{instancePath:instancePath+"/alias",schemaPath:"#/properties/alias/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.dateDiscovered !== undefined){let data3 = data.dateDiscovered;const _errs7 = errors;if(errors === _errs7){if(errors === _errs7){if(typeof data3 === "string"){if(!(formats0.validate(data3))){validate21.errors = [{instancePath:instancePath+"/dateDiscovered",schemaPath:"#/properties/dateDiscovered/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate21.errors = [{instancePath:instancePath+"/dateDiscovered",schemaPath:"#/properties/dateDiscovered/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.dateUpdated !== undefined){let data4 = data.dateUpdated;const _errs9 = errors;if(errors === _errs9){if(errors === _errs9){if(typeof data4 === "string"){if(!(formats0.validate(data4))){validate21.errors = [{instancePath:instancePath+"/dateUpdated",schemaPath:"#/properties/dateUpdated/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate21.errors = [{instancePath:instancePath+"/dateUpdated",schemaPath:"#/properties/dateUpdated/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.displayName !== undefined){const _errs11 = errors;if(typeof data.displayName !== "string"){validate21.errors = [{instancePath:instancePath+"/displayName",schemaPath:"#/properties/displayName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.geoData !== undefined){let data6 = data.geoData;const _errs13 = errors;const _errs14 = errors;if(errors === _errs14){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){if(data6.countryCode !== undefined){const _errs16 = errors;if(typeof data6.countryCode !== "string"){validate21.errors = [{instancePath:instancePath+"/geoData/countryCode",schemaPath:"#/definitions/NodeGeoData/properties/countryCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}if(valid2){if(data6.countryName !== undefined){const _errs18 = errors;if(typeof data6.countryName !== "string"){validate21.errors = [{instancePath:instancePath+"/geoData/countryName",schemaPath:"#/definitions/NodeGeoData/properties/countryName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs18 === errors;}else {var valid2 = true;}if(valid2){if(data6.latitude !== undefined){let data9 = data6.latitude;const _errs20 = errors;if(!((typeof data9 == "number") && (isFinite(data9)))){validate21.errors = [{instancePath:instancePath+"/geoData/latitude",schemaPath:"#/definitions/NodeGeoData/properties/latitude/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs20 === errors;}else {var valid2 = true;}if(valid2){if(data6.longitude !== undefined){let data10 = data6.longitude;const _errs22 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){validate21.errors = [{instancePath:instancePath+"/geoData/longitude",schemaPath:"#/definitions/NodeGeoData/properties/longitude/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs22 === errors;}else {var valid2 = true;}}}}}else {validate21.errors = [{instancePath:instancePath+"/geoData",schemaPath:"#/definitions/NodeGeoData/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.historyUrl !== undefined){const _errs24 = errors;if(typeof data.historyUrl !== "string"){validate21.errors = [{instancePath:instancePath+"/historyUrl",schemaPath:"#/properties/historyUrl/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.homeDomain !== undefined){const _errs26 = errors;if(typeof data.homeDomain !== "string"){validate21.errors = [{instancePath:instancePath+"/homeDomain",schemaPath:"#/properties/homeDomain/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.host !== undefined){const _errs28 = errors;if(typeof data.host !== "string"){validate21.errors = [{instancePath:instancePath+"/host",schemaPath:"#/properties/host/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.index !== undefined){let data14 = data.index;const _errs30 = errors;if(!((typeof data14 == "number") && (isFinite(data14)))){validate21.errors = [{instancePath:instancePath+"/index",schemaPath:"#/properties/index/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.lag !== undefined){let data15 = data.lag;const _errs32 = errors;if(!((typeof data15 == "number") && (isFinite(data15)))){validate21.errors = [{instancePath:instancePath+"/lag",schemaPath:"#/properties/lag/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.ip !== undefined){const _errs34 = errors;if(typeof data.ip !== "string"){validate21.errors = [{instancePath:instancePath+"/ip",schemaPath:"#/properties/ip/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs34 === errors;}else {var valid0 = true;}if(valid0){if(data.isFullValidator !== undefined){const _errs36 = errors;if(typeof data.isFullValidator !== "boolean"){validate21.errors = [{instancePath:instancePath+"/isFullValidator",schemaPath:"#/properties/isFullValidator/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.isValidating !== undefined){const _errs38 = errors;if(typeof data.isValidating !== "boolean"){validate21.errors = [{instancePath:instancePath+"/isValidating",schemaPath:"#/properties/isValidating/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.isValidator !== undefined){const _errs40 = errors;if(typeof data.isValidator !== "boolean"){validate21.errors = [{instancePath:instancePath+"/isValidator",schemaPath:"#/properties/isValidator/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.isp !== undefined){const _errs42 = errors;if(typeof data.isp !== "string"){validate21.errors = [{instancePath:instancePath+"/isp",schemaPath:"#/properties/isp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs42 === errors;}else {var valid0 = true;}if(valid0){if(data.key !== undefined){const _errs44 = errors;if(typeof data.key !== "string"){validate21.errors = [{instancePath:instancePath+"/key",schemaPath:"#/properties/key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs44 === errors;}else {var valid0 = true;}if(valid0){if(data.ledgerVersion !== undefined){let data22 = data.ledgerVersion;const _errs46 = errors;if(!((typeof data22 == "number") && (isFinite(data22)))){validate21.errors = [{instancePath:instancePath+"/ledgerVersion",schemaPath:"#/properties/ledgerVersion/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs46 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs48 = errors;if(typeof data.name !== "string"){validate21.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs48 === errors;}else {var valid0 = true;}if(valid0){if(data.networkId !== undefined){const _errs50 = errors;if(typeof data.networkId !== "string"){validate21.errors = [{instancePath:instancePath+"/networkId",schemaPath:"#/properties/networkId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs50 === errors;}else {var valid0 = true;}if(valid0){if(data.organizationId !== undefined){const _errs52 = errors;if(typeof data.organizationId !== "string"){validate21.errors = [{instancePath:instancePath+"/organizationId",schemaPath:"#/properties/organizationId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs52 === errors;}else {var valid0 = true;}if(valid0){if(data.overLoaded !== undefined){const _errs54 = errors;if(typeof data.overLoaded !== "boolean"){validate21.errors = [{instancePath:instancePath+"/overLoaded",schemaPath:"#/properties/overLoaded/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs54 === errors;}else {var valid0 = true;}if(valid0){if(data.overlayMinVersion !== undefined){let data27 = data.overlayMinVersion;const _errs56 = errors;if(!((typeof data27 == "number") && (isFinite(data27)))){validate21.errors = [{instancePath:instancePath+"/overlayMinVersion",schemaPath:"#/properties/overlayMinVersion/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs56 === errors;}else {var valid0 = true;}if(valid0){if(data.overlayVersion !== undefined){let data28 = data.overlayVersion;const _errs58 = errors;if(!((typeof data28 == "number") && (isFinite(data28)))){validate21.errors = [{instancePath:instancePath+"/overlayVersion",schemaPath:"#/properties/overlayVersion/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs58 === errors;}else {var valid0 = true;}if(valid0){if(data.port !== undefined){let data29 = data.port;const _errs60 = errors;if(!((typeof data29 == "number") && (isFinite(data29)))){validate21.errors = [{instancePath:instancePath+"/port",schemaPath:"#/properties/port/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs60 === errors;}else {var valid0 = true;}if(valid0){if(data.publicKey !== undefined){const _errs62 = errors;if(typeof data.publicKey !== "string"){validate21.errors = [{instancePath:instancePath+"/publicKey",schemaPath:"#/properties/publicKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs62 === errors;}else {var valid0 = true;}if(valid0){if(data.quorumSet !== undefined){const _errs64 = errors;if(!(validate22(data.quorumSet, {instancePath:instancePath+"/quorumSet",parentData:data,parentDataProperty:"quorumSet",rootData}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}var valid0 = _errs64 === errors;}else {var valid0 = true;}if(valid0){if(data.quorumSetHashKey !== undefined){const _errs65 = errors;if(typeof data.quorumSetHashKey !== "string"){validate21.errors = [{instancePath:instancePath+"/quorumSetHashKey",schemaPath:"#/properties/quorumSetHashKey/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs65 === errors;}else {var valid0 = true;}if(valid0){if(data.statistics !== undefined){let data33 = data.statistics;const _errs67 = errors;const _errs68 = errors;if(errors === _errs68){if(data33 && typeof data33 == "object" && !Array.isArray(data33)){if(data33.active24HoursPercentage !== undefined){let data34 = data33.active24HoursPercentage;const _errs70 = errors;if(!((typeof data34 == "number") && (isFinite(data34)))){validate21.errors = [{instancePath:instancePath+"/statistics/active24HoursPercentage",schemaPath:"#/definitions/NodeStatistics/properties/active24HoursPercentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs70 === errors;}else {var valid4 = true;}if(valid4){if(data33.active30DaysPercentage !== undefined){let data35 = data33.active30DaysPercentage;const _errs72 = errors;if(!((typeof data35 == "number") && (isFinite(data35)))){validate21.errors = [{instancePath:instancePath+"/statistics/active30DaysPercentage",schemaPath:"#/definitions/NodeStatistics/properties/active30DaysPercentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs72 === errors;}else {var valid4 = true;}if(valid4){if(data33.has24HourStats !== undefined){const _errs74 = errors;if(typeof data33.has24HourStats !== "boolean"){validate21.errors = [{instancePath:instancePath+"/statistics/has24HourStats",schemaPath:"#/definitions/NodeStatistics/properties/has24HourStats/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid4 = _errs74 === errors;}else {var valid4 = true;}if(valid4){if(data33.has30DayStats !== undefined){const _errs76 = errors;if(typeof data33.has30DayStats !== "boolean"){validate21.errors = [{instancePath:instancePath+"/statistics/has30DayStats",schemaPath:"#/definitions/NodeStatistics/properties/has30DayStats/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid4 = _errs76 === errors;}else {var valid4 = true;}if(valid4){if(data33.overLoaded24HoursPercentage !== undefined){let data38 = data33.overLoaded24HoursPercentage;const _errs78 = errors;if(!((typeof data38 == "number") && (isFinite(data38)))){validate21.errors = [{instancePath:instancePath+"/statistics/overLoaded24HoursPercentage",schemaPath:"#/definitions/NodeStatistics/properties/overLoaded24HoursPercentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs78 === errors;}else {var valid4 = true;}if(valid4){if(data33.overLoaded30DaysPercentage !== undefined){let data39 = data33.overLoaded30DaysPercentage;const _errs80 = errors;if(!((typeof data39 == "number") && (isFinite(data39)))){validate21.errors = [{instancePath:instancePath+"/statistics/overLoaded30DaysPercentage",schemaPath:"#/definitions/NodeStatistics/properties/overLoaded30DaysPercentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs80 === errors;}else {var valid4 = true;}if(valid4){if(data33.validating24HoursPercentage !== undefined){let data40 = data33.validating24HoursPercentage;const _errs82 = errors;if(!((typeof data40 == "number") && (isFinite(data40)))){validate21.errors = [{instancePath:instancePath+"/statistics/validating24HoursPercentage",schemaPath:"#/definitions/NodeStatistics/properties/validating24HoursPercentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs82 === errors;}else {var valid4 = true;}if(valid4){if(data33.validating30DaysPercentage !== undefined){let data41 = data33.validating30DaysPercentage;const _errs84 = errors;if(!((typeof data41 == "number") && (isFinite(data41)))){validate21.errors = [{instancePath:instancePath+"/statistics/validating30DaysPercentage",schemaPath:"#/definitions/NodeStatistics/properties/validating30DaysPercentage/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs84 === errors;}else {var valid4 = true;}}}}}}}}}else {validate21.errors = [{instancePath:instancePath+"/statistics",schemaPath:"#/definitions/NodeStatistics/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs67 === errors;}else {var valid0 = true;}if(valid0){if(data.versionStr !== undefined){const _errs86 = errors;if(typeof data.versionStr !== "string"){validate21.errors = [{instancePath:instancePath+"/versionStr",schemaPath:"#/properties/versionStr/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs86 === errors;}else {var valid0 = true;}if(valid0){if(data.historyArchiveHasError !== undefined){const _errs88 = errors;if(typeof data.historyArchiveHasError !== "boolean"){validate21.errors = [{instancePath:instancePath+"/historyArchiveHasError",schemaPath:"#/properties/historyArchiveHasError/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs88 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}else {validate21.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate21.errors = vErrors;return errors === 0;}function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="network.json" */;let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.nodes === undefined) && (missing0 = "nodes")){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.time !== undefined){let data0 = data.time;const _errs1 = errors;if(errors === _errs1){if(errors === _errs1){if(typeof data0 === "string"){if(!(formats0.validate(data0))){validate20.errors = [{instancePath:instancePath+"/time",schemaPath:"#/properties/time/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/time",schemaPath:"#/properties/time/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.latestLedger !== undefined){const _errs3 = errors;if(typeof data.latestLedger !== "string"){validate20.errors = [{instancePath:instancePath+"/latestLedger",schemaPath:"#/properties/latestLedger/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.statistics !== undefined){let data2 = data.statistics;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.hasQuorumIntersection !== undefined){const _errs8 = errors;if(typeof data2.hasQuorumIntersection !== "boolean"){validate20.errors = [{instancePath:instancePath+"/statistics/hasQuorumIntersection",schemaPath:"#/definitions/NetworkStatistics/properties/hasQuorumIntersection/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data2.hasTransitiveQuorumSet !== undefined){const _errs10 = errors;if(typeof data2.hasTransitiveQuorumSet !== "boolean"){validate20.errors = [{instancePath:instancePath+"/statistics/hasTransitiveQuorumSet",schemaPath:"#/definitions/NetworkStatistics/properties/hasTransitiveQuorumSet/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data2.minBlockingSetFilteredSize !== undefined){let data5 = data2.minBlockingSetFilteredSize;const _errs12 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate20.errors = [{instancePath:instancePath+"/statistics/minBlockingSetFilteredSize",schemaPath:"#/definitions/NetworkStatistics/properties/minBlockingSetFilteredSize/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data2.minBlockingSetOrgsFilteredSize !== undefined){let data6 = data2.minBlockingSetOrgsFilteredSize;const _errs14 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate20.errors = [{instancePath:instancePath+"/statistics/minBlockingSetOrgsFilteredSize",schemaPath:"#/definitions/NetworkStatistics/properties/minBlockingSetOrgsFilteredSize/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data2.minBlockingSetOrgsSize !== undefined){let data7 = data2.minBlockingSetOrgsSize;const _errs16 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate20.errors = [{instancePath:instancePath+"/statistics/minBlockingSetOrgsSize",schemaPath:"#/definitions/NetworkStatistics/properties/minBlockingSetOrgsSize/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}if(valid2){if(data2.minBlockingSetSize !== undefined){let data8 = data2.minBlockingSetSize;const _errs18 = errors;if(!((typeof data8 == "number") && (isFinite(data8)))){validate20.errors = [{instancePath:instancePath+"/statistics/minBlockingSetSize",schemaPath:"#/definitions/NetworkStatistics/properties/minBlockingSetSize/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs18 === errors;}else {var valid2 = true;}if(valid2){if(data2.minSplittingSetOrgsSize !== undefined){let data9 = data2.minSplittingSetOrgsSize;const _errs20 = errors;if(!((typeof data9 == "number") && (isFinite(data9)))){validate20.errors = [{instancePath:instancePath+"/statistics/minSplittingSetOrgsSize",schemaPath:"#/definitions/NetworkStatistics/properties/minSplittingSetOrgsSize/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs20 === errors;}else {var valid2 = true;}if(valid2){if(data2.minSplittingSetCountrySize !== undefined){let data10 = data2.minSplittingSetCountrySize;const _errs22 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){validate20.errors = [{instancePath:instancePath+"/statistics/minSplittingSetCountrySize",schemaPath:"#/definitions/NetworkStatistics/properties/minSplittingSetCountrySize/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs22 === errors;}else {var valid2 = true;}if(valid2){if(data2.minSplittingSetISPSize !== undefined){let data11 = data2.minSplittingSetISPSize;const _errs24 = errors;if(!((typeof data11 == "number") && (isFinite(data11)))){validate20.errors = [{instancePath:instancePath+"/statistics/minSplittingSetISPSize",schemaPath:"#/definitions/NetworkStatistics/properties/minSplittingSetISPSize/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs24 === errors;}else {var valid2 = true;}if(valid2){if(data2.minSplittingSetSize !== undefined){let data12 = data2.minSplittingSetSize;const _errs26 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate20.errors = [{instancePath:instancePath+"/statistics/minSplittingSetSize",schemaPath:"#/definitions/NetworkStatistics/properties/minSplittingSetSize/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs26 === errors;}else {var valid2 = true;}if(valid2){if(data2.nrOfActiveFullValidators !== undefined){let data13 = data2.nrOfActiveFullValidators;const _errs28 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate20.errors = [{instancePath:instancePath+"/statistics/nrOfActiveFullValidators",schemaPath:"#/definitions/NetworkStatistics/properties/nrOfActiveFullValidators/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs28 === errors;}else {var valid2 = true;}if(valid2){if(data2.nrOfActiveOrganizations !== undefined){let data14 = data2.nrOfActiveOrganizations;const _errs30 = errors;if(!((typeof data14 == "number") && (isFinite(data14)))){validate20.errors = [{instancePath:instancePath+"/statistics/nrOfActiveOrganizations",schemaPath:"#/definitions/NetworkStatistics/properties/nrOfActiveOrganizations/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs30 === errors;}else {var valid2 = true;}if(valid2){if(data2.nrOfActiveValidators !== undefined){let data15 = data2.nrOfActiveValidators;const _errs32 = errors;if(!((typeof data15 == "number") && (isFinite(data15)))){validate20.errors = [{instancePath:instancePath+"/statistics/nrOfActiveValidators",schemaPath:"#/definitions/NetworkStatistics/properties/nrOfActiveValidators/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs32 === errors;}else {var valid2 = true;}if(valid2){if(data2.nrOfActiveWatchers !== undefined){let data16 = data2.nrOfActiveWatchers;const _errs34 = errors;if(!((typeof data16 == "number") && (isFinite(data16)))){validate20.errors = [{instancePath:instancePath+"/statistics/nrOfActiveWatchers",schemaPath:"#/definitions/NetworkStatistics/properties/nrOfActiveWatchers/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs34 === errors;}else {var valid2 = true;}if(valid2){if(data2.time !== undefined){let data17 = data2.time;const _errs36 = errors;if(errors === _errs36){if(errors === _errs36){if(typeof data17 === "string"){if(!(formats0.validate(data17))){validate20.errors = [{instancePath:instancePath+"/statistics/time",schemaPath:"#/definitions/NetworkStatistics/properties/time/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/statistics/time",schemaPath:"#/definitions/NetworkStatistics/properties/time/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs36 === errors;}else {var valid2 = true;}if(valid2){if(data2.topTierOrgsSize !== undefined){let data18 = data2.topTierOrgsSize;const _errs38 = errors;if(!((typeof data18 == "number") && (isFinite(data18)))){validate20.errors = [{instancePath:instancePath+"/statistics/topTierOrgsSize",schemaPath:"#/definitions/NetworkStatistics/properties/topTierOrgsSize/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs38 === errors;}else {var valid2 = true;}if(valid2){if(data2.topTierSize !== undefined){let data19 = data2.topTierSize;const _errs40 = errors;if(!((typeof data19 == "number") && (isFinite(data19)))){validate20.errors = [{instancePath:instancePath+"/statistics/topTierSize",schemaPath:"#/definitions/NetworkStatistics/properties/topTierSize/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs40 === errors;}else {var valid2 = true;}if(valid2){if(data2.transitiveQuorumSetSize !== undefined){let data20 = data2.transitiveQuorumSetSize;const _errs42 = errors;if(!((typeof data20 == "number") && (isFinite(data20)))){validate20.errors = [{instancePath:instancePath+"/statistics/transitiveQuorumSetSize",schemaPath:"#/definitions/NetworkStatistics/properties/transitiveQuorumSetSize/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs42 === errors;}else {var valid2 = true;}}}}}}}}}}}}}}}}}}}else {validate20.errors = [{instancePath:instancePath+"/statistics",schemaPath:"#/definitions/NetworkStatistics/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs44 = errors;if(typeof data.id !== "string"){validate20.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs44 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs46 = errors;if(typeof data.name !== "string"){validate20.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs46 === errors;}else {var valid0 = true;}if(valid0){if(data.nodes !== undefined){let data23 = data.nodes;const _errs48 = errors;if(errors === _errs48){if(Array.isArray(data23)){var valid3 = true;const len0 = data23.length;for(let i0=0; i0<len0; i0++){const _errs50 = errors;if(!(validate21(data23[i0], {instancePath:instancePath+"/nodes/" + i0,parentData:data23,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);errors = vErrors.length;}var valid3 = _errs50 === errors;if(!valid3){break;}}}else {validate20.errors = [{instancePath:instancePath+"/nodes",schemaPath:"#/properties/nodes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs48 === errors;}else {var valid0 = true;}if(valid0){if(data.organizations !== undefined){let data25 = data.organizations;const _errs51 = errors;if(errors === _errs51){if(Array.isArray(data25)){var valid4 = true;const len1 = data25.length;for(let i1=0; i1<len1; i1++){let data26 = data25[i1];const _errs53 = errors;const _errs54 = errors;if(errors === _errs54){if(data26 && typeof data26 == "object" && !Array.isArray(data26)){let missing1;if((((data26.id === undefined) && (missing1 = "id")) || ((data26.name === undefined) && (missing1 = "name"))) || ((data26.validators === undefined) && (missing1 = "validators"))){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1,schemaPath:"organization.json/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data26.dateDiscovered !== undefined){let data27 = data26.dateDiscovered;const _errs56 = errors;if(errors === _errs56){if(errors === _errs56){if(typeof data27 === "string"){if(!(formats0.validate(data27))){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/dateDiscovered",schemaPath:"organization.json/properties/dateDiscovered/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/dateDiscovered",schemaPath:"organization.json/properties/dateDiscovered/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid6 = _errs56 === errors;}else {var valid6 = true;}if(valid6){if(data26.dba !== undefined){const _errs58 = errors;if(typeof data26.dba !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/dba",schemaPath:"organization.json/properties/dba/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs58 === errors;}else {var valid6 = true;}if(valid6){if(data26.description !== undefined){const _errs60 = errors;if(typeof data26.description !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/description",schemaPath:"organization.json/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs60 === errors;}else {var valid6 = true;}if(valid6){if(data26.github !== undefined){const _errs62 = errors;if(typeof data26.github !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/github",schemaPath:"organization.json/properties/github/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs62 === errors;}else {var valid6 = true;}if(valid6){if(data26.has24HourStats !== undefined){const _errs64 = errors;if(typeof data26.has24HourStats !== "boolean"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/has24HourStats",schemaPath:"organization.json/properties/has24HourStats/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid6 = _errs64 === errors;}else {var valid6 = true;}if(valid6){if(data26.has30DayStats !== undefined){const _errs66 = errors;if(typeof data26.has30DayStats !== "boolean"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/has30DayStats",schemaPath:"organization.json/properties/has30DayStats/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid6 = _errs66 === errors;}else {var valid6 = true;}if(valid6){if(data26.horizonUrl !== undefined){const _errs68 = errors;if(typeof data26.horizonUrl !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/horizonUrl",schemaPath:"organization.json/properties/horizonUrl/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs68 === errors;}else {var valid6 = true;}if(valid6){if(data26.id !== undefined){const _errs70 = errors;if(typeof data26.id !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/id",schemaPath:"organization.json/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs70 === errors;}else {var valid6 = true;}if(valid6){if(data26.hasReliableUptime !== undefined){const _errs72 = errors;if(typeof data26.hasReliableUptime !== "boolean"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/hasReliableUptime",schemaPath:"organization.json/properties/hasReliableUptime/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid6 = _errs72 === errors;}else {var valid6 = true;}if(valid6){if(data26.keybase !== undefined){const _errs74 = errors;if(typeof data26.keybase !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/keybase",schemaPath:"organization.json/properties/keybase/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs74 === errors;}else {var valid6 = true;}if(valid6){if(data26.logo !== undefined){const _errs76 = errors;if(typeof data26.logo !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/logo",schemaPath:"organization.json/properties/logo/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs76 === errors;}else {var valid6 = true;}if(valid6){if(data26.name !== undefined){const _errs78 = errors;if(typeof data26.name !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/name",schemaPath:"organization.json/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs78 === errors;}else {var valid6 = true;}if(valid6){if(data26.officialEmail !== undefined){const _errs80 = errors;if(typeof data26.officialEmail !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/officialEmail",schemaPath:"organization.json/properties/officialEmail/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs80 === errors;}else {var valid6 = true;}if(valid6){if(data26.phoneNumber !== undefined){const _errs82 = errors;if(typeof data26.phoneNumber !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/phoneNumber",schemaPath:"organization.json/properties/phoneNumber/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs82 === errors;}else {var valid6 = true;}if(valid6){if(data26.physicalAddress !== undefined){const _errs84 = errors;if(typeof data26.physicalAddress !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/physicalAddress",schemaPath:"organization.json/properties/physicalAddress/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs84 === errors;}else {var valid6 = true;}if(valid6){if(data26.subQuorum24HoursAvailability !== undefined){let data42 = data26.subQuorum24HoursAvailability;const _errs86 = errors;if(!((typeof data42 == "number") && (isFinite(data42)))){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/subQuorum24HoursAvailability",schemaPath:"organization.json/properties/subQuorum24HoursAvailability/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid6 = _errs86 === errors;}else {var valid6 = true;}if(valid6){if(data26.subQuorum30DaysAvailability !== undefined){let data43 = data26.subQuorum30DaysAvailability;const _errs88 = errors;if(!((typeof data43 == "number") && (isFinite(data43)))){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/subQuorum30DaysAvailability",schemaPath:"organization.json/properties/subQuorum30DaysAvailability/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid6 = _errs88 === errors;}else {var valid6 = true;}if(valid6){if(data26.subQuorumAvailable !== undefined){const _errs90 = errors;if(typeof data26.subQuorumAvailable !== "boolean"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/subQuorumAvailable",schemaPath:"organization.json/properties/subQuorumAvailable/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid6 = _errs90 === errors;}else {var valid6 = true;}if(valid6){if(data26.twitter !== undefined){const _errs92 = errors;if(typeof data26.twitter !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/twitter",schemaPath:"organization.json/properties/twitter/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs92 === errors;}else {var valid6 = true;}if(valid6){if(data26.url !== undefined){const _errs94 = errors;if(typeof data26.url !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/url",schemaPath:"organization.json/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs94 === errors;}else {var valid6 = true;}if(valid6){if(data26.validators !== undefined){let data47 = data26.validators;const _errs96 = errors;if(errors === _errs96){if(Array.isArray(data47)){var valid7 = true;const len2 = data47.length;for(let i2=0; i2<len2; i2++){const _errs98 = errors;if(typeof data47[i2] !== "string"){validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/validators/" + i2,schemaPath:"organization.json/properties/validators/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid7 = _errs98 === errors;if(!valid7){break;}}}else {validate20.errors = [{instancePath:instancePath+"/organizations/" + i1+"/validators",schemaPath:"organization.json/properties/validators/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid6 = _errs96 === errors;}else {var valid6 = true;}}}}}}}}}}}}}}}}}}}}}}}else {validate20.errors = [{instancePath:instancePath+"/organizations/" + i1,schemaPath:"organization.json/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid4 = _errs53 === errors;if(!valid4){break;}}}else {validate20.errors = [{instancePath:instancePath+"/organizations",schemaPath:"#/properties/organizations/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs51 === errors;}else {var valid0 = true;}if(valid0){if(data.transitiveQuorumSet !== undefined){let data49 = data.transitiveQuorumSet;const _errs100 = errors;if(errors === _errs100){if(Array.isArray(data49)){var valid8 = true;const len3 = data49.length;for(let i3=0; i3<len3; i3++){const _errs102 = errors;if(typeof data49[i3] !== "string"){validate20.errors = [{instancePath:instancePath+"/transitiveQuorumSet/" + i3,schemaPath:"#/properties/transitiveQuorumSet/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid8 = _errs102 === errors;if(!valid8){break;}}}else {validate20.errors = [{instancePath:instancePath+"/transitiveQuorumSet",schemaPath:"#/properties/transitiveQuorumSet/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs100 === errors;}else {var valid0 = true;}if(valid0){if(data.scc !== undefined){let data51 = data.scc;const _errs104 = errors;if(errors === _errs104){if(Array.isArray(data51)){var valid9 = true;const len4 = data51.length;for(let i4=0; i4<len4; i4++){let data52 = data51[i4];const _errs106 = errors;if(errors === _errs106){if(Array.isArray(data52)){var valid10 = true;const len5 = data52.length;for(let i5=0; i5<len5; i5++){const _errs108 = errors;if(typeof data52[i5] !== "string"){validate20.errors = [{instancePath:instancePath+"/scc/" + i4+"/" + i5,schemaPath:"#/properties/scc/items/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid10 = _errs108 === errors;if(!valid10){break;}}}else {validate20.errors = [{instancePath:instancePath+"/scc/" + i4,schemaPath:"#/properties/scc/items/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid9 = _errs106 === errors;if(!valid9){break;}}}else {validate20.errors = [{instancePath:instancePath+"/scc",schemaPath:"#/properties/scc/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs104 === errors;}else {var valid0 = true;}}}}}}}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}